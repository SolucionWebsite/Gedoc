@using Gedoc.Helpers
@using Gedoc.Helpers.Enum

@{
    Layout = null;
}
<script>
    function currentFilters() {
        return {
            TipoBusquedaBusqAv: '@Request["TipoBusquedaBusqAv"]',
            TipoBitacoraBusqAv: '@Request["TipoBitacoraBusqAv"]',
            FechaIngresoBusqAv: '@Request["FechaIngresoBusqAv"]',
            DocumentoIngresoIdBusqAv: '@Request["DocumentoIngresoIdBusqAv"]',
            FechaDocumentoIngresoBusqAv: '@Request["FechaDocumentoIngresoBusqAv"]',
            RequerimientoAnteriorIdBusqAv: '@Request["RequerimientoAnteriorIdBusqAv"]',
            RemitenteIdBusqAv: '@Request["RemitenteIdBusqAv"]',
            InstitucionRemitenteBusqAv: '@Html.Raw(Request["InstitucionRemitenteBusqAv"])',
            CargoProfesionRemitenteBusqAv: '@Html.Raw(Request["CargoProfesionRemitenteBusqAv"])',
            NumeroOficioCMNBusqAv: '@Request["NumeroOficioCMNBusqAv"]',
            FechaEmisionOficioCMNBusqAv: '@Request["FechaEmisionOficioCMNBusqAv"]',
            MateriaBusqAv: '@Html.Raw(Request["MateriaBusqAv"])',
            RegionBusqAv: '@Request["RegionBusqAv"]',
            ComunaBusqAv: '@Request["ComunaBusqAv"]',
            EtiquetaBusqAv: '@Request["EtiquetaBusqAv"]',
            DenominacionOficialBusqAv: '@Html.Raw(Request["DenominacionOficialBusqAv"])',
            CategoriaMonumentoNacionalBusqAv: '@Html.Raw(Request["CategoriaMonumentoNacionalBusqAv"])',
            RolSIIPropiedadBusqAv: '@Html.Raw(Request["RolSIIPropiedadBusqAv"])',
            FechaBitacoraBusqAv: '@Request["FechaBitacoraBusqAv"]',
            UnidadTecnicaAsignadaBusqAv: '@Request["UnidadTecnicaAsignadaBusqAv"]',
            ProfesionalUTAsignadoBusqAv: '@Request["ProfesionalUTAsignadoBusqAv"]',
            CreadorBitacoraBusqAv: '@Request["CreadorBitacoraBusqAv"]',
            FormaLlegadaBusqAv: '@Request["FormaLlegadaBusqAv"]',
            EstadoBusqAv: '@Request["EstadoBusqAv"]',
            EstadoDespachoBusqAv: '@Request["EstadoDespachoBusqAv"]',
            ObservacionAcuerdoComentarioBusqAv: '@Html.Raw(Request["ObservacionAcuerdoComentarioBusqAv"])'
        }
    }

    function botonBitacora(e) {
        $(".k-grid-Bitacora").each(function () {
            $(this).removeClass("k-button");
            $(this).removeClass("k-button-icontext");
            $(this).attr("href", null);
            $(this).css("cursor", "pointer");
            $(this).html('<img width="20" height="20" src="Content/images/Icono-Bitacora.png" title="Bitácora" />');
        });
    }

    //# sourceURL=IngresosTab
</script>
<style>
    #gridIngresos {
        font-size: 11px;
    }
    #gridIngresos td {
        line-height: 1.1em;
    }
    #gridIngresos .k-grid-header .k-header .k-link {
        height: auto;
    }
    #gridIngresos .k-grid-header .k-header {
        white-space: normal;
    }
    #gridIngresos .k-grid-header th > .k-link > .k-icon {
        float: right;
    }
    #gridIngresos .k-grid-toolbar > span {
        float: left !important;
    }
    #gridIngresos .k-grid-toolbar > button {
        float: left !important;
    }
    /*#tabstrip > .k-content.k-state-active {
        padding: 0;
        display: table;
    }*/
</style>
<div class="container-fluid-no" id="divResultadoBusquedaAvanzadaIngreso" style="padding:0; ">
    @*<div class="form-row">
        <div class="col-md-12">*@
            @(Html.Kendo().Grid<Gedoc.Helpers.Dto.RequerimientoDto>()
                .Name("gridIngresos")
                .Columns(columns =>
                {
                    columns.Bound(c => c.DocumentoIngreso)
                        .Width("100px")
                        .Title("Documento Ingreso")
                        .ClientTemplate("#= Main.getTemplateFicha(data.DocumentoIngreso, data.Id, data.DocumentoIngreso) #").HeaderHtmlAttributes(new { style = "text-align:center;" });
                    //columns.Bound(c => c.DocumentoIngreso).Width(120).HtmlAttributes(new { style = "text-align:center;" }).Title("Documento Ingreso").HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.FechaIngreso)
                        .Width(100)
                        .HtmlAttributes(new { style = "text-align:center;" })
                        .Title("Fecha Ingreso")
                        .Format("{0:dd/MM/yyyy HH:mm}")
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.FechaDocumento)
                        .Width(100)
                        .HtmlAttributes(new { style = "text-align:center;" })
                        .Title("Fecha Documento Ingreso")
                        .Format("{0:dd/MM/yyyy HH:mm}")
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.ObservacionesTipoDoc).Width(200)
                        .Title("Tipo de Documento / Observaciones")
                        .Encoded(false)
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.ObservacionesAdjuntos)
                        .Width(200)
                        .Title("Tipo de Adjunto / Observaciones")
                        .Encoded(false)
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.RemitenteNombre)
                        .Width(150)
                        .Title("Remitente")
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.RemitenteInstitucion)
                        .Width(240)
                        .Title("Institución Remitente")
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.Materia)
                        .Width(260)
                        .HtmlAttributes(new { style = "text-align:center;" })
                        .Title("Materia Ingreso")
                        .HeaderHtmlAttributes(new { style = "text-align:center;" })
                        .ClientTemplate("<span title='#:data.Materia#'> #:Main.acortaTexto(data.Materia, 100)#" + "</span>");
                    columns.Bound(c => c.EtiquetaTitulos)
                        .Width(110)
                        .HtmlAttributes(new { style = "text-align:center;" }).Title("Etiqueta").HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.CategoriaMonumentoNacTitulo)
                        .Width(100)
                        .HtmlAttributes(new { style = "text-align:center;" }).Title("Categoría de Monumento Nacional").HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.DenominacionOficial)
                        .Width(200)
                        .Title("Denominación Oficial")
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.RegionTitulos)
                        .Width(150)
                        .Title("Región")
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.ComunaTitulos)
                        .Width(150)
                        .Title("Comuna")
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.UtAsignadaTitulo).Width(150)
                        
                        .Title("Unidad Técnica")
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.ProfesionalNombre)
                        .Width(150)
                        .Title("Profesional Asignado")
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.EstadoTitulo)
                        .Width(120)
                        .HtmlAttributes(new { style = "text-align:center;" })
                        .Title("Estado")
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(c => c.ComentarioCierre)
                        .Width(200)
                        .Title("Comentario Cierre")
                        .Encoded(false)
                        .HeaderHtmlAttributes(new { style = "text-align:center;" });
                    columns.Command(c => c.Custom("Bitacora")
                        .Click("accionBitacora") /*.Template("#= buildAccionBitacora2(data)#")*/)
                        .HtmlAttributes(new {style = "text-align:center;"})
                        .HeaderHtmlAttributes(new {style = "text-align:center;"})
                        .Title("Acciones")
                        .Width(75);
                    //.ClientTemplate("#= buildAccionBitacora(data.Id, data.DocumentoIngreso)#")
                    //.Sortable(false)
                })
                //***** .HtmlAttributes(new { style = "height: 800px; width: 200%; display:table-row;", @class = "text-sm-center" })
                //.HtmlAttributes(new { style = "height: '100%'; width:100%;", @class = "text-sm-center" })
                .ToolBar(t => { t.Search(); t.Excel().Text("Excel"); })
                .Excel(excel =>
                {
                    excel.FileName("Ingresos_BusquedaAvanzada.xlsx");
                    excel.AllPages(true);
                })
                .Events(e => e.DataBound("botonBitacora"))
                //.Editable(editable=>editable.Mode(GridEditMode.PopUp))
                .Pageable(pager => pager.AlwaysVisible(true).PageSizes(new List<object> { 5, 10, 30, 100, 250 })
                    .Messages(m => m.ItemsPerPage("registros por página")))
                .Sortable(sortable =>
                {
                    sortable.SortMode(GridSortMode.SingleColumn);
                })
                .Scrollable(scr => scr.Height("100%"))
                .NoRecords("No se encontraron datos.")
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .ServerOperation(false)
                    //.Model(model =>
                    //{
                    //    model.Id(u => u.Id);
                    //    model.Field(u => u.Id).Editable(false);
                    //})
                    .Read(read => read.Action("IngresosTab_Read", "BusquedaAvanzada").Data("currentFilters"))
                    //.Update(update => update.Action("Grid_Update", "Adjunto").Data("currentFilters"))
                    .Model(m => m.Id(id => id.Id))
                    .PageSize(5))
            )
        @*</div>
    </div>*@
</div>

<script>

    kendo.culture("es-ES"); // Tiene el formato de fecha dd/MM/yyyy q es el q se usa en la aplicación, la cultura es-CL tiene formato dd-MM-yyyy

    $(function () {
        kendo.ui.progress($("#divResultadoBusquedaAvanzadaIngreso"), true);

        $(".k-textbox.k-grid-search input").attr("placeholder", "Buscar...");
        //$(".k-pager-sizes.k-label").html($(".k-pager-sizes.k-label").html().replace("items per page", "elementos por página"));

        $("#gridIngresos th.k-header a.k-link").each(function () {
            var colText = $(this).html();
            var newText = colText + '<span class="k-icon k-i-kpi" style="color: lightgray;"></span>';
            $(this).html(newText);
        });

        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('items per page', 'elementos por página');
        });
    });

    //# sourceURL=IngresosTab2
</script>
