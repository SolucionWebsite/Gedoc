@using Gedoc.Helpers
@using Gedoc.Helpers.Enum
@model Gedoc.WebApp.Models.ListaValorModel

@{
    Layout = null;
    ResultadoOperacion accesoForm = ViewBag.AccesoForm ?? new ResultadoOperacion(1, "OK", null);
}


<script src="~/Scripts/form.js"></script>


<div class="div-main-form">

    <form id="formListaValor" action="@Url.Action("SaveListaValor", "Lista")" class="form-datos">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(a => a.IdLista)
        @Html.HiddenFor(a => a.EsNuevo)


        <div class="form-row">
            <div class="col-md-3">
                <label class="label-dato-form">
                    Código<span class="marca-obligatorio" title="Este campo es obligatorio."> *</span>
                </label>
            </div>
            <div class="col-md-9">
                @if (string.IsNullOrWhiteSpace(Model.Codigo))
                {
                    @Html.TextBoxFor(a => a.Codigo,
                        new { @class = "k-textbox w-100", required = "required" })
                    <span class="k-invalid-msg" data-for="Codigo"></span>
                }
                else
                {
                    @Html.HiddenFor(a => a.Codigo)
                    <label class="label-dato-form">
                        @Model.Codigo
                    </label>
                }
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-3">
                <label class="label-dato-form">
                    Nombre<span class="marca-obligatorio" title="Este campo es obligatorio."> *</span>
                </label>
            </div>
            <div class="col-md-9">
                @Html.TextBoxFor(a => a.Titulo,
                    new { @class = "k-textbox w-100", required = "required" })
                <span class="k-invalid-msg" data-for="Titulo"></span>
            </div>
        </div>

        @*<div class="form-row">
            <div class="col-md-3">
                <label class="label-dato-form">
                    Orden
                </label>
            </div>
            <div class="col-md-9">
                @(Html.Kendo().NumericTextBoxFor(model => model.Orden)
                    .Name("Orden")
                    .Value(Model.Orden.GetValueOrDefault(0))
                    .Step(1)
                    .Min(0)
                    .Decimals(0)
                    .Format("0") )
            </div>
        </div>*@

        <div class="form-row">
            <div class="col-md-3">
                <label class="label-dato-form">
                    Código Padre
                </label>
            </div>
            <div class="col-md-9">
                @Html.TextBoxFor(a => a.CodigoPadre,
                    new { @class = "k-textbox w-100" })
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-3">
                <label class="label-dato-form">
                    Valor Extra 1
                </label>
            </div>
            <div class="col-md-9">
                @Html.TextBoxFor(a => a.ValorExtra1,
                    new { @class = "k-textbox w-100" })
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-3">
                <label class="label-dato-form">
                    Valor Extra 2
                </label>
            </div>
            <div class="col-md-9">
                @Html.TextBoxFor(a => a.ValorExtra2,
                    new { @class = "k-textbox w-100" })
            </div>
        </div>

        <div class="form-row">
            <label for="IdEstadoRegistroValor" class="label-dato-form col-md-3">
                Estado<span class="marca-obligatorio" title="Este campo es obligatorio."> *</span>
            </label>
            <div class="col-md-4">
                @(Html.Kendo().ComboBox()
                    .Name("IdEstadoRegistroValor")
                    .DataTextField("Titulo")
                    .DataValueField("Id")
                    .Filter("contains")
                    .HtmlAttributes(new {@class = "w-100", required = "true"})
                    .Messages(Gedoc.WebApp.Helpers.KendoHelper.SetComboBoxMessages)
                    )
                <span class="k-invalid-msg" data-for="IdEstadoRegistroValor"></span>
            </div>
        </div>


        <div class="footer-modal">
            <div class="form-row">
                <div class="offset-md-3 col-md-2 text-center">
                    <button type="button" id="btnGrabaCalendario" class="k-primary-blue k-button" onclick="grabaListaValor(event);">Guardar</button>
                </div>
                <div class="offset-md-2 col-md-2 text-center">
                    <button type="button" id="btnCancelaCalendario" class="k-danger k-button" onclick="cancelaListaValor(event);">Cancelar</button>
                </div>
            </div>
        </div>

    </form>

</div>

<script>

    @if (accesoForm.Codigo < 0)
    {
        <text>
    Main.showAlert("@Html.Raw(accesoForm.Mensaje)")
        .then(function (result) {
            Main.cierraModal(null, false, "winFormListaValor");
        });
        </text>
    }

    $(function() {
        var ds = Main.getDataSourceKendoGenerico($("#IdEstadoRegistroValor"),
            '@Url.Action("MantenedorGenerico", "Json")?idM=@((int) Mantenedor.EstadoRegistro)');
        $("#IdEstadoRegistroValor").data("kendoComboBox").setDataSource(ds);

        Form.inicializaForm();

        configValidacionForm();

        $(".k-grid-search input").prop("placeholder", "Buscar...");
        $(".k-grid-search input").prop("title", "Buscar...");
    });

    function configValidacionForm() {
        var container = $("#formListaValor");
        kendo.init(container);
        container.kendoValidator({
            messages: {
                required: "Este campo es obligatorio"
            }
        });
    }


    function grabaListaValor(e) {

        Main.wait("Grabando...");

        var currentTarget = $(e.currentTarget);
        var form = $("#formListaValor");

        var validator = form.data("kendoValidator");
        if (!validator.validate()) {
            Main.unwait();
            Main.showError("Por favor, revise los datos de la página. Hay datos incompletos o erróneos.");
            return false;
        }

        var data = $(form).serialize();
        var url = $(form).attr("action");
        $.ajax({
            type: "POST",
            url: url,
            data: data,
            //dataType: "json"
        }).done(function(response) {
            Main.unwait();
            if (response.Codigo) {
                if (response.Codigo > 0) {
                    Main.showInfo(response.Mensaje).then(function (result) {
                        Main.cierraModal(currentTarget, true, "winFormListaValor");
                    });
                } else {
                    Main.showError(response.Mensaje, "Error");
                }
            } else {
                Main.showAlert("Error inesperado al realizar la operación, por favor, vuelva a intentarlo",
                    "Error");
            }
        }).fail(function(error) {
            Main.unwait();
            Main.showError("Ha ocurrido un error al realizar la operación, por favor, vuelva a intentarlo.",
                "Error");
        });
    }

    function cancelaListaValor(e) {
        Main.cierraModal($(e.currentTarget), { resultado: false }, "winFormListaValor");
    }


    //# sourceURL=FormListaValor


</script>